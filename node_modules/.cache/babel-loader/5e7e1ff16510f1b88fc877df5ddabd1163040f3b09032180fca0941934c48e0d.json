{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakabangu/Desktop/promineo/last project week 16/src/components/RecipeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RecipeCard from './RecipeCard';\n// import the context component ie. RecipeContext\nimport { RecipeContext } from \"./RecipeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeList() {\n  _s();\n  const [apiRecipes, setApiRecipes] = useState([]);\n  const [userRecipes, setUserRecipes] = useState([]);\n  useEffect(() => {\n    const fetchApiRecipes = async () => {\n      try {\n        const response = await axios.get('https://www.themealdb.com/api/json/v1/1/random.php');\n        console.log(\"fetch api recipes response, \", response.data);\n        setApiRecipes(response.data.meals);\n      } catch (error) {\n        console.error('Error fetching API data:', error);\n      }\n    };\n    fetchApiRecipes();\n  }, []);\n  useEffect(() => {\n    console.log('User recipes have been updated:', userRecipes);\n  }, [userRecipes]);\n  const addRecipeToList = newRecipe => {\n    // Added a console.log to see when/if this function is called and\n    console.log(\"addRecipeToList, \", newRecipe);\n    setUserRecipes([...userRecipes, newRecipe]);\n  };\n  const unifyRecipeStructure = recipe => {\n    return {\n      id: recipe.idMeal || recipe.id,\n      // Use a consistent property name for ID\n      title: recipe.strMeal || recipe.title,\n      // Use a consistent property name for Title\n      category: recipe.strCategory || recipe.category,\n      // Use a consistent property name for Category\n      area: recipe.strArea || recipe.area,\n      // Use a consistent property name for Area\n      thumbnail: recipe.strMealThumb || recipe.image // Use a consistent property name for Thumbnail\n    };\n  };\n  const allRecipes = [...apiRecipes.map(unifyRecipeStructure), ...userRecipes.map(unifyRecipeStructure)];\n  return (\n    /*#__PURE__*/\n    // wrap the returned JSX in the context component and return the value or values, in this case the function addRecipeToList\n    //example if you want to pass multiple values:\n    /*\n        <RecipeContext.Provider value={{ \n    isLoading, // a boolean state\n    recipes, // an array state\n    statusMessage, // a string state\n    addRecipeToList // a function\n        }}>\n    */\n    //Passes only the addRecipeToList method to the context component\n    _jsxDEV(RecipeContext.Provider, {\n      value: {\n        addRecipeToList\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), allRecipes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading recipes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this) : allRecipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n          id: recipe.id,\n          title: recipe.title,\n          category: recipe.category,\n          area: recipe.area,\n          thumbnail: recipe.thumbnail\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(RecipeList, \"7W5biQn9wkk1ja4xrXUtzBimfXc=\");\n_c = RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","RecipeCard","RecipeContext","jsxDEV","_jsxDEV","RecipeList","_s","apiRecipes","setApiRecipes","userRecipes","setUserRecipes","fetchApiRecipes","response","get","console","log","data","meals","error","addRecipeToList","newRecipe","unifyRecipeStructure","recipe","id","idMeal","title","strMeal","category","strCategory","area","strArea","thumbnail","strMealThumb","image","allRecipes","map","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/joshuakabangu/Desktop/promineo/last project week 16/src/components/RecipeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RecipeCard from './RecipeCard';\n// import the context component ie. RecipeContext\nimport { RecipeContext } from \"./RecipeContext\";\n\nexport default function RecipeList() {\n    const [apiRecipes, setApiRecipes] = useState([]);\n    const [userRecipes, setUserRecipes] = useState([]);\n\n    useEffect(() => {\n        const fetchApiRecipes = async () => {\n            try {\n                const response = await axios.get('https://www.themealdb.com/api/json/v1/1/random.php');\n                console.log(\"fetch api recipes response, \", response.data);\n                setApiRecipes(response.data.meals);\n            } catch (error) {\n                console.error('Error fetching API data:', error);\n            }\n        };\n\n        fetchApiRecipes();\n    }, []);\n\n    useEffect(() => {\n        console.log('User recipes have been updated:', userRecipes);\n    }, [userRecipes])\n\n    const addRecipeToList = (newRecipe) => {\n        // Added a console.log to see when/if this function is called and\n        console.log(\"addRecipeToList, \", newRecipe);\n        setUserRecipes([...userRecipes, newRecipe]);\n    };\n\n\n\n    const unifyRecipeStructure = (recipe) => {\n        return {\n            id: recipe.idMeal || recipe.id, // Use a consistent property name for ID\n            title: recipe.strMeal || recipe.title, // Use a consistent property name for Title\n            category: recipe.strCategory || recipe.category, // Use a consistent property name for Category\n            area: recipe.strArea || recipe.area, // Use a consistent property name for Area\n            thumbnail: recipe.strMealThumb || recipe.image, // Use a consistent property name for Thumbnail\n        };\n    };\n\n    const allRecipes = [\n        ...apiRecipes.map(unifyRecipeStructure),\n        ...userRecipes.map(unifyRecipeStructure),\n    ];\n\n    return (\n        // wrap the returned JSX in the context component and return the value or values, in this case the function addRecipeToList\n\n        //example if you want to pass multiple values:\n        /*\n            <RecipeContext.Provider value={{ \n        isLoading, // a boolean state\n        recipes, // an array state\n        statusMessage, // a string state\n        addRecipeToList // a function\n            }}>\n        */\n\n        //Passes only the addRecipeToList method to the context component\n        <RecipeContext.Provider value={{ addRecipeToList }}>\n            <div>\n                <h2>Recipes</h2>\n                {allRecipes.length === 0 ? (\n                    <p>Loading recipes...</p>\n                ) : (\n                    allRecipes.map((recipe) => (\n                        <RecipeCard\n                            key={recipe.id}\n                            id={recipe.id}\n                            title={recipe.title}\n                            category={recipe.category}\n                            area={recipe.area}\n                            thumbnail={recipe.thumbnail}\n                        />\n                    ))\n                )}\n            </div>\n        </RecipeContext.Provider>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}